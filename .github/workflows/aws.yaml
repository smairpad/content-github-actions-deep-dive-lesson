name: PublishtoS3Bucket
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps: 
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install linting libraries
        run: |
            cd function
            pip install flake8
      - name: Lint with flake8
        run: |
            # Select identifies which errors should cause the job to fail
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            # The exit zero flag will show errors as warnings and not fail the run
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install libraries
        run: |
            cd function
            python -m pip install --upgrade pip
            if [-f requirements.txt ]; then pip install -r requirements.txt -t .; fi
      - name: Create Zip
        run: |
            cd function
            zip -r ../${{ github.sha }}.zip .
      - name: Archieve Artifact
        uses: actions/upload-artifact@v2
        with:
          name: zipped-artifact
          path: ${{ github.sha }}.zip
  publishtos3:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: zipped-artifact
      - name: Configure AWS cli
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Upload to s3
        run: aws s3 cp ${{ github.sha }}.zip s3://githubactions2022wertfg/${{ github.sha }}.zip
  test:
    runs-on: ubuntu-latest
    needs: publishtos3
    steps:
      - name: Configure AWS cli
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Create test lambda function this is to create test env to execute functional tests
        run: |
            aws lambda create-function --function-name test-function \
            --code S3Bucket=githubactions2022wertfg,S3Key=${{ github.sha }}.zip \
            --handler lambda_function.lambda_handler --runtime python3.8 \
            --role arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/my-lambda-role
      - name: Wait 30 seconds In this step we will run functional tests as test env is created
        run: sleep 30
      - name: Destros test lambda function that is test env if always is used as we always want to destry the env even if previous step fails
        if: ${{ always() }}
        run: aws lambda delete-function --function-name test-function
  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Configure AWS cli
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Update lambda function code we created role and lambda fnc in AWS
        run: |
            aws lambda update-function-code \
            --function-name my-function \
            --s3-bucket githubactions2022wertfg \
            --s3-key ${{ github.sha }}.zip \
            --publish
